var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "state", ()=>state
);
const state = {
    data: {
        currentGame: {
            computerPlay: "",
            myPlay: ""
        },
        history: [],
        listeners: []
    },
    getState () {
        return this.data;
    },
    setState (newState) {
        this.data = newState;
        for (const cb of this.listeners)cb();
    },
    suscribe (callback) {
        this.listeners.push(callback);
    },
    setMove (move) {
        const currentState = state.getState();
        currentState.currentGame.myPlay = move;
        currentState.currentGame.computerPlay = "tijeras";
        currentState.history.push(currentState.currentGame);
    },
    getScore () {
        let myScore = 0;
        let computerScore = 0;
        let history = state.data.history;
        for (const s of history){
            if (this.whoWins(s.myPlay, s.computerPlay) == "ganaste") myScore++;
            if (this.whoWins(s.myPlay, s.computerPlay) == "perdiste") computerScore++;
        }
        return {
            myScore,
            computerScore
        };
    },
    whoWins (myPlay, computerPlay) {
        if (myPlay == "piedra") {
            if (computerPlay == "papel") return "perdiste";
            if (computerPlay == "tijeras") return "ganaste";
        }
        if (myPlay == "tijeras") {
            if (computerPlay == "papel") return "ganaste";
            if (computerPlay == "piedra") return "perdiste";
        }
        if (myPlay == "papel") {
            if (computerPlay == "tijeras") return "perdiste";
            if (computerPlay == "piedra") return "ganaste";
        }
    }
};
