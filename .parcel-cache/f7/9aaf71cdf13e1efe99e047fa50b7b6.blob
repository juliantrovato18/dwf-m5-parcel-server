var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "state", ()=>state
);
const state = {
    data: {
        currentGame: {
            computerPlay: "",
            myPlay: ""
        },
        history: [
            {
            }
        ],
        listeners: []
    },
    getState () {
        return this.data;
    },
    setState (newState) {
        this.data = newState;
        for (const cb of this.listeners)cb();
    },
    suscribe (callback) {
        this.listeners.push(callback);
    },
    setMove (move) {
        const currentState = state.getState();
        currentState.currentGame.myPlay = move;
        currentState.currentGame.computerPlay = "tijeras";
    },
    getScore () {
    },
    whoWins (myPlay, computerPlay) {
        const ganeConTijeras = myPlay == "tijeras" && computerPlay == "papel";
        const ganeConPapel = myPlay == "papel" && computerPlay == "piedra";
        const ganeConPiedra = myPlay == "piedra" && computerPlay == "tijeras";
        const perdiConTijeras = myPlay == "tijeras" && computerPlay == "piedra";
        const perdiConPapel = myPlay == "papel" && computerPlay == "tijeras";
        const perdiConPiedra = myPlay == "piedra" && computerPlay == "papel";
        const perdi = [
            perdiConPapel,
            perdiConPiedra,
            perdiConTijeras
        ];
        const gane = [
            ganeConPapel,
            ganeConPiedra,
            ganeConTijeras
        ].includes(true);
        if (gane == true) return "ganaste";
        else return;
    }
};
